#BlueJ class context
comment0.params=n
comment0.target=Player(java.lang.String)
comment0.text=\r\n\ The\ constructor\ method\ of\ the\ Player\ class\ takes\ in\ 1\ parameter,\ as\ the\ other\ 3\ important\ values\ will\ always\ be\ the\ same.\ The\ maxHealth,\ health,\ and\ equipped[0]\ will\ be\ the\ same\r\n\ for\ all\ players.\ The\ name\ is\ the\ only\ thing\ that\ needs\ to\ be\ changed\ as\ the\ user\ can\ input\ whatever\ name\ they\ want.\r\n\ @param\ n\:\ This\ parameter\ is\ the\ one\ that\ determines\ the\ name\ of\ the\ Player.\ This\ n\ will\ be\ taken\ in\ from\ the\ driver\ class\ and\ used\ in\ this\ method.\r\n
comment1.params=
comment1.target=java.lang.String\ getName()
comment10.params=
comment10.target=int\ getX()
comment11.params=y
comment11.target=void\ setY(int)
comment12.params=
comment12.target=int\ getY()
comment13.params=
comment13.target=Item\ getWeapon()
comment14.params=
comment14.target=Item\ getRing1()
comment15.params=
comment15.target=Item\ getRing2()
comment16.params=
comment16.target=int\ getGold()
comment17.params=x
comment17.target=void\ setGold(Encounter)
comment18.params=x
comment18.target=void\ setGoldTrade(int)
comment19.params=
comment19.target=java.util.ArrayList\ getEquipInv()
comment2.params=
comment2.target=void\ equip()
comment2.text=\r\n\ The\ equip\ method\ is\ used\ to\ put\ an\ item\ in\ the\ user's\ equip\ slot.\ They\ can\ choose\ from\ either\ a\ weapon\ or\ a\ ring,\ and\ both\ are\ handled\ differently.\ Weapons\ are\ simply\ equipped\ as\ they\ have\ no\ special\ effects\ about\ them\r\n\ Rings\ take\ more\ processing\ as\ it\ has\ to\ be\ determined\ which\ slot\ the\ user\ wants\ to\ equip\ it\ too\ and\ the\ effect\ of\ the\ ring\ has\ to\ be\ activated.\ The\ names\ of\ the\ available\ objects\ are\ displayed,\r\n\ and\ the\ user\ inputs\ which\ one\ they\ want\ to\ equip.\ It\ is\ then\ checked\ to\ see\ what\ object\ name\ the\ input\ matches\ up\ with,\ and\ this\ item\ is\ equipped.\r\n
comment20.params=
comment20.target=java.util.ArrayList\ getConsumeInv()
comment21.params=x
comment21.target=void\ setDamageBNS(int)
comment22.params=x
comment22.target=void\ setGoldBNS(int)
comment3.params=x
comment3.target=void\ pickup(Item)
comment3.text=\r\n\ The\ pickup\ method\ is\ automatically\ used\ by\ the\ player\ when\ an\ object\ is\ bought\ by\ the\ user\ or\ is\ found\ in\ a\ chest.\ \r\n\ The\ method\ checks\ for\ what\ type\ of\ item\ it\ is,\ and\ puts\ it\ in\ the\ appropriate\ inventory.\r\n\ @param\ x\:\ This\ parameter\ simply\ refers\ to\ the\ item\ that\ is\ being\ added\ to\ the\ inventory.\ Its\ type\ is\ checked\ by\ the\ if\ statements\r\n
comment4.params=
comment4.target=int\ getHP()
comment5.params=newHP
comment5.target=void\ setHP(int)
comment6.params=newMHP
comment6.target=void\ setMHP(int)
comment7.params=
comment7.target=void\ Consume()
comment7.text=\r\n\ The\ consume\ method\ is\ used\ by\ the\ user\ to\ consume\ an\ item\ and\ regain\ health.\ First\ the\ names\ of\ the\ items\ are\ printed\ out,\ and\ then\ the\ user\ inputs\ which\ one\ of\ those\ items\r\n\ they\ would\ like\ to\ use.\ If\ what\ the\ user\ inputs\ matches\ any\ of\ the\ objects\ in\ the\ inventory,\ the\ object\ is\ consumed\ and\ health\ is\ regained\ \r\n
comment8.params=target
comment8.target=void\ Attack(Encounter)
comment8.text=\r\n\ The\ attack\ method\ is\ only\ used\ when\ the\ user\ comes\ upon\ an\ enemy.\ A\ random\ number\ is\ generated\ within\ the\ range\ of\ the\ low\ and\ high\ damage\ of\ the\ weapon\ equipped.\ This\ damage\ is\ taken\r\n\ and\ is\ subtracted\ from\ the\ health\ of\ the\ target\ using\ the\ setHP\ method.\ A\ message\ is\ then\ printed\ saying\ how\ much\ damage\ was\ dealt\r\n\ @param\ target\:\ The\ target\ paramater\ is\ used\ to\ show\ who\ the\ damage\ is\ being\ dealth\ to.\ Both\ of\ the\ objects\ will\ be\ in\ an\ array\ when\ this\ is\ done\ so\ that\ they\ can\ be\ processed\ polymorphically.\r\n
comment9.params=x
comment9.target=void\ setX(int)
numComments=23
